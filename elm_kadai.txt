import Browser
import Html exposing (..)
import Html.Attributes exposing (..)
import Html.Events exposing (..)
import Json.Decode exposing (map2, field, float)

main = Browser.sandbox
  { init=init
  , view=view
  , update=update
  }

type Msg = NoOp
         | Drag
         | NotDrag
         | Move Float Float

type alias Model =
  { color:String
  , x:Float
  , y:Float
  , drag:Bool
  }
init : Model
init = 
  { color = "blue"
  , x = 0
  , y = 0
  , drag = False
  }

update : Msg -> Model -> Model
update msg model =
  case msg of
    Drag -> {model | color = "green", drag = True}
    NotDrag -> {model | color = "red", drag = False}
    Move x y ->
      { model | 
        x = if model.drag then 
          x-50
        else
          model.x
      , y = if model.drag then 
          y-50
        else
          model.y
      }
    _ -> model

view : Model -> Html Msg
view model =
  div[style "background" "white"
    , style "height" "100vh"
    , on "mousemove" (map2 Move (field "clientX" float) (field "clientY" float))
    ]
    [ div[style "position" "relative" 
      ,  style "background" model.color
      ,  style "height" "100px"
      ,  style "width" "100px"
      ,  style "top" <| String.fromFloat model.y ++ "px"
      ,  style "left" <| String.fromFloat model.x ++ "px"
      ,  onMouseDown Drag
      ,  onMouseUp NotDrag
      ]
      []
    ]